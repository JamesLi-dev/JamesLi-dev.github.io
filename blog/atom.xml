<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://JamesLi-dev.github.io/blog</id>
    <title>这里是 Torli's  Blog</title>
    <updated>2023-03-15T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://JamesLi-dev.github.io/blog"/>
    <subtitle>这里是 Torli's  Blog</subtitle>
    <icon>https://JamesLi-dev.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[前端面试准备计划，直面寒冬！]]></title>
        <id>https://JamesLi-dev.github.io/blog/2023/03/15/blog</id>
        <link href="https://JamesLi-dev.github.io/blog/2023/03/15/blog"/>
        <updated>2023-03-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[为了更好的直面寒冬，应对现在大环境，是时候好好准备一下了。]]></summary>
        <content type="html"><![CDATA[<p>为了更好的直面寒冬，应对现在大环境，是时候好好准备一下了。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="一简历">一、简历<a href="#一简历" class="hash-link" aria-label="一、简历的直接链接" title="一、简历的直接链接">​</a></h2><p>找工作，那肯定不能少了简历，敲门砖嘛！一份好的简历可以让你轻松通过初筛，拿到面试的机会</p><p>总结几点</p><ul><li>简历内容简洁明了，简历模板不需要太花哨</li><li>内容块要有明确（个人信息，工作经历，项目经历，专业技能，社区blog等模块）<ul><li>最重要的应该是表现出自己的优势在哪里，比如在项目中，做了哪些难点工作，工作职责内容等</li><li>个人在项目中的参与度，是什么角色</li><li>个人基本信息</li><li>加分项 github（要有内容） blog 网站 有自己的东西</li></ul></li><li>专业技能，写那么4-5点就OK，太基础的就不需要写了，两个关键词 『精通』『熟练』要区分</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="二技术准备">二、技术准备<a href="#二技术准备" class="hash-link" aria-label="二、技术准备的直接链接" title="二、技术准备的直接链接">​</a></h2><p>众所周知，国内面试都会经常问一些八股文，算法等等这类的东西，虽然很反感，但是不得不做准备，这里就突然想起一次特别的面试方式，给面试人一个需求（在github上），要求面试人5天之内完成这个需求，提交到github上，当然这种面试是在面试完基础知识点之后的第二面或者三面的内容，你觉得这类的面试方式你可以接受吗？</p><p>扯远了，言归正传，下面我只列出大纲内容</p><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="htmlcss">HTML，CSS<a href="#htmlcss" class="hash-link" aria-label="HTML，CSS的直接链接" title="HTML，CSS的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1从浏览器导航栏输入地址到页面渲染完成的过程">1、从浏览器导航栏输入地址到页面渲染完成的过程<a href="#1从浏览器导航栏输入地址到页面渲染完成的过程" class="hash-link" aria-label="1、从浏览器导航栏输入地址到页面渲染完成的过程的直接链接" title="1、从浏览器导航栏输入地址到页面渲染完成的过程的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2语义化标签">2、语义化标签<a href="#2语义化标签" class="hash-link" aria-label="2、语义化标签的直接链接" title="2、语义化标签的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3我的js-基础中可以查看">3、<a href="https://jamesli-dev.github.io/docs/base/js/jsBasic" target="_blank" rel="noopener noreferrer" title="我的js 基础中可以查看">script 标签的 <code>defer</code> 和 <code>async</code></a><a href="#3我的js-基础中可以查看" class="hash-link" aria-label="3我的js-基础中可以查看的直接链接" title="3我的js-基础中可以查看的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4script标签defer-和-async-什么区别">4、script标签，defer 和 async 什么区别？<a href="#4script标签defer-和-async-什么区别" class="hash-link" aria-label="4、script标签，defer 和 async 什么区别？的直接链接" title="4、script标签，defer 和 async 什么区别？的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5重排reflow和重绘repaint的理解">5、重排（reflow）和重绘（repaint）的理解<a href="#5重排reflow和重绘repaint的理解" class="hash-link" aria-label="5、重排（reflow）和重绘（repaint）的理解的直接链接" title="5、重排（reflow）和重绘（repaint）的理解的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="6flex-布局">6、flex 布局<a href="#6flex-布局" class="hash-link" aria-label="6、flex 布局的直接链接" title="6、flex 布局的直接链接">​</a></h4><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="js-基础">JS 基础<a href="#js-基础" class="hash-link" aria-label="JS 基础的直接链接" title="JS 基础的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1event-loop-事件循环">1、event loop 事件循环<a href="#1event-loop-事件循环" class="hash-link" aria-label="1、event loop 事件循环的直接链接" title="1、event loop 事件循环的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2this指向有哪几种">2、this指向有哪几种？<a href="#2this指向有哪几种" class="hash-link" aria-label="2、this指向有哪几种？的直接链接" title="2、this指向有哪几种？的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3原型和原型链">3、原型和原型链<a href="#3原型和原型链" class="hash-link" aria-label="3、原型和原型链的直接链接" title="3、原型和原型链的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4作用域作用域链">4、作用域，作用域链<a href="#4作用域作用域链" class="hash-link" aria-label="4、作用域，作用域链的直接链接" title="4、作用域，作用域链的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5执行上下文">5、执行上下文<a href="#5执行上下文" class="hash-link" aria-label="5、执行上下文的直接链接" title="5、执行上下文的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="6闭包">6、闭包<a href="#6闭包" class="hash-link" aria-label="6、闭包的直接链接" title="6、闭包的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="7内存泄露">7、内存泄露<a href="#7内存泄露" class="hash-link" aria-label="7、内存泄露的直接链接" title="7、内存泄露的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="8es6-新特性">8、ES6 新特性<a href="#8es6-新特性" class="hash-link" aria-label="8、ES6 新特性的直接链接" title="8、ES6 新特性的直接链接">​</a></h4><ul><li>箭头函数、模板字符串、模板字符串、解构赋值、延展操作符、对象属性简写、Let与Const</li><li>对象方法、数组方法、Set 和 Map</li><li>Promise、async/await、generator</li><li>ES6 Modules<h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="9call-applybind-使用区别实现">9、call， apply，bind （使用，区别，实现）<a href="#9call-applybind-使用区别实现" class="hash-link" aria-label="9、call， apply，bind （使用，区别，实现）的直接链接" title="9、call， apply，bind （使用，区别，实现）的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="10new-操作符过程">10、new 操作符（过程）<a href="#10new-操作符过程" class="hash-link" aria-label="10、new 操作符（过程）的直接链接" title="10、new 操作符（过程）的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="11数据类型怎么判断-typeof">11、数据类型（怎么判断 typeof...）<a href="#11数据类型怎么判断-typeof" class="hash-link" aria-label="11、数据类型（怎么判断 typeof...）的直接链接" title="11、数据类型（怎么判断 typeof...）的直接链接">​</a></h4></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="ts">TS<a href="#ts" class="hash-link" aria-label="TS的直接链接" title="TS的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1ts-泛型">1、<a href="https://jamesli-dev.github.io/docs/base/TS/tsGenerics," target="_blank" rel="noopener noreferrer" title="TS 泛型">泛型</a><a href="#1ts-泛型" class="hash-link" aria-label="1ts-泛型的直接链接" title="1ts-泛型的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2我的ts-基础">2、<a href="https://jamesli-dev.github.io/docs/base/TS/tsBase," target="_blank" rel="noopener noreferrer" title="我的TS 基础">TS 中有哪些类型</a><a href="#2我的ts-基础" class="hash-link" aria-label="2我的ts-基础的直接链接" title="2我的ts-基础的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3ts-和-js-相比有哪些优势">3、TS 和 JS 相比有哪些优势<a href="#3ts-和-js-相比有哪些优势" class="hash-link" aria-label="3、TS 和 JS 相比有哪些优势的直接链接" title="3、TS 和 JS 相比有哪些优势的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4void-和-never-区别">4、void 和 never 区别<a href="#4void-和-never-区别" class="hash-link" aria-label="4、void 和 never 区别的直接链接" title="4、void 和 never 区别的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5any-和-unknow-的区别">5、any 和 unknow 的区别<a href="#5any-和-unknow-的区别" class="hash-link" aria-label="5、any 和 unknow 的区别的直接链接" title="5、any 和 unknow 的区别的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="6类型推断">6、类型推断<a href="#6类型推断" class="hash-link" aria-label="6、类型推断的直接链接" title="6、类型推断的直接链接">​</a></h4><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="react">React<a href="#react" class="hash-link" aria-label="React的直接链接" title="React的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1fiber---diff算法---虚拟dom---事件系统">1、fiber -&gt; diff算法 -&gt; 虚拟Dom -&gt; 事件系统<a href="#1fiber---diff算法---虚拟dom---事件系统" class="hash-link" aria-label="1、fiber -> diff算法 -> 虚拟Dom -> 事件系统的直接链接" title="1、fiber -> diff算法 -> 虚拟Dom -> 事件系统的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2react-中key的作用">2、react 中key的作用<a href="#2react-中key的作用" class="hash-link" aria-label="2、react 中key的作用的直接链接" title="2、react 中key的作用的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3生命周期---hooks-出现解决了什么以及他们之间的区别">3、生命周期 -&gt; hooks 出现解决了什么，以及他们之间的区别<a href="#3生命周期---hooks-出现解决了什么以及他们之间的区别" class="hash-link" aria-label="3、生命周期 -> hooks 出现解决了什么，以及他们之间的区别的直接链接" title="3、生命周期 -> hooks 出现解决了什么，以及他们之间的区别的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4常用hooks的作用经常怎么使用">4、常用hooks的作用，经常怎么使用<a href="#4常用hooks的作用经常怎么使用" class="hash-link" aria-label="4、常用hooks的作用，经常怎么使用的直接链接" title="4、常用hooks的作用，经常怎么使用的直接链接">​</a></h4><ul><li>useState, useEffect, useRef, useLayoutEffect</li><li>useMemo, useCallback</li><li>useContext, </li></ul><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5类组件---函数组件-区别">5、类组件 -&gt; 函数组件 区别<a href="#5类组件---函数组件-区别" class="hash-link" aria-label="5、类组件 -> 函数组件 区别的直接链接" title="5、类组件 -> 函数组件 区别的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="6context">6、context<a href="#6context" class="hash-link" aria-label="6、context的直接链接" title="6、context的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="7redux-等状态管理原理执行过程">7、redux 等状态管理原理，执行过程<a href="#7redux-等状态管理原理执行过程" class="hash-link" aria-label="7、redux 等状态管理原理，执行过程的直接链接" title="7、redux 等状态管理原理，执行过程的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="8性能优化memo-usememo-lazy-suspense-fragment等等">8、性能优化（memo, useMemo, lazy, Suspense, Fragment等等）<a href="#8性能优化memo-usememo-lazy-suspense-fragment等等" class="hash-link" aria-label="8、性能优化（memo, useMemo, lazy, Suspense, Fragment等等）的直接链接" title="8、性能优化（memo, useMemo, lazy, Suspense, Fragment等等）的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="9自定义hooks">9、自定义hooks<a href="#9自定义hooks" class="hash-link" aria-label="9、自定义hooks的直接链接" title="9、自定义hooks的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="10错误边界报警系统捕获错误等-如果做过前端监控">10、错误边界，报警系统，捕获错误等 (如果做过前端监控)<a href="#10错误边界报警系统捕获错误等-如果做过前端监控" class="hash-link" aria-label="10、错误边界，报警系统，捕获错误等 (如果做过前端监控)的直接链接" title="10、错误边界，报警系统，捕获错误等 (如果做过前端监控)的直接链接">​</a></h4><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="webpack">webpack<a href="#webpack" class="hash-link" aria-label="webpack的直接链接" title="webpack的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1打包流程">1、打包流程<a href="#1打包流程" class="hash-link" aria-label="1、打包流程的直接链接" title="1、打包流程的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2loader-plugin-用来做什么有什么区别">2、loader, plugin 用来做什么，有什么区别<a href="#2loader-plugin-用来做什么有什么区别" class="hash-link" aria-label="2、loader, plugin 用来做什么，有什么区别的直接链接" title="2、loader, plugin 用来做什么，有什么区别的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3描述怎么实现一个loader-或者plugin">3、描述怎么实现一个loader 或者plugin<a href="#3描述怎么实现一个loader-或者plugin" class="hash-link" aria-label="3、描述怎么实现一个loader 或者plugin的直接链接" title="3、描述怎么实现一个loader 或者plugin的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4热更新-原理">4、热更新 原理<a href="#4热更新-原理" class="hash-link" aria-label="4、热更新 原理的直接链接" title="4、热更新 原理的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5怎么优化构建速度">5、怎么优化构建速度<a href="#5怎么优化构建速度" class="hash-link" aria-label="5、怎么优化构建速度的直接链接" title="5、怎么优化构建速度的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="6文件指纹策略">6、文件指纹策略<a href="#6文件指纹策略" class="hash-link" aria-label="6、文件指纹策略的直接链接" title="6、文件指纹策略的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="7和其他打包工具比如-vite-区别">7、和其他打包工具比如 vite 区别<a href="#7和其他打包工具比如-vite-区别" class="hash-link" aria-label="7、和其他打包工具比如 vite 区别的直接链接" title="7、和其他打包工具比如 vite 区别的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="8babel原理">8、Babel（原理）<a href="#8babel原理" class="hash-link" aria-label="8、Babel（原理）的直接链接" title="8、Babel（原理）的直接链接">​</a></h4><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="工程化模块化">工程化，模块化<a href="#工程化模块化" class="hash-link" aria-label="工程化，模块化的直接链接" title="工程化，模块化的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1-脚手架-creat-react-appvue-cli等等模板管理减少框架搭建时间">1、 脚手架 creat-react-app、vue-cli等等，模板管理，减少框架搭建时间<a href="#1-脚手架-creat-react-appvue-cli等等模板管理减少框架搭建时间" class="hash-link" aria-label="1、 脚手架 creat-react-app、vue-cli等等，模板管理，减少框架搭建时间的直接链接" title="1、 脚手架 creat-react-app、vue-cli等等，模板管理，减少框架搭建时间的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2-代码规范-eslint--prettier--husky-构建pre-commit-预检规范">2、 代码规范 eslint + prettier + husky 构建pre-commit 预检规范<a href="#2-代码规范-eslint--prettier--husky-构建pre-commit-预检规范" class="hash-link" aria-label="2、 代码规范 eslint + prettier + husky 构建pre-commit 预检规范的直接链接" title="2、 代码规范 eslint + prettier + husky 构建pre-commit 预检规范的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3-项目上线前的流程规范-git-分支管理开发分支develop-测试分支master-主干">3、 项目上线前的流程规范 git 分支管理，开发分支，develop 测试分支，master 主干<a href="#3-项目上线前的流程规范-git-分支管理开发分支develop-测试分支master-主干" class="hash-link" aria-label="3、 项目上线前的流程规范 git 分支管理，开发分支，develop 测试分支，master 主干的直接链接" title="3、 项目上线前的流程规范 git 分支管理，开发分支，develop 测试分支，master 主干的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4-项目中的模块化页面组件化细化页面抽离公共组件减少单文件代码量">4、 项目中的模块化、页面组件化，细化页面，抽离公共组件，减少单文件代码量<a href="#4-项目中的模块化页面组件化细化页面抽离公共组件减少单文件代码量" class="hash-link" aria-label="4、 项目中的模块化、页面组件化，细化页面，抽离公共组件，减少单文件代码量的直接链接" title="4、 项目中的模块化、页面组件化，细化页面，抽离公共组件，减少单文件代码量的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5-mock服务mockjs-接口拦截返回模拟数据或yapiswagger">5、 mock服务，mockjs 接口拦截，返回模拟数据，或Yapi，swagger<a href="#5-mock服务mockjs-接口拦截返回模拟数据或yapiswagger" class="hash-link" aria-label="5、 mock服务，mockjs 接口拦截，返回模拟数据，或Yapi，swagger的直接链接" title="5、 mock服务，mockjs 接口拦截，返回模拟数据，或Yapi，swagger的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="6-自动化部署-jenkins">6、 自动化部署 Jenkins<a href="#6-自动化部署-jenkins" class="hash-link" aria-label="6、 自动化部署 Jenkins的直接链接" title="6、 自动化部署 Jenkins的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="7公司级组件库">7、公司级组件库？<a href="#7公司级组件库" class="hash-link" aria-label="7、公司级组件库？的直接链接" title="7、公司级组件库？的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="8微前端single-spaqiankun">8、微前端（single-spa？、qiankun）<a href="#8微前端single-spaqiankun" class="hash-link" aria-label="8、微前端（single-spa？、qiankun）的直接链接" title="8、微前端（single-spa？、qiankun）的直接链接">​</a></h4><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="性能优化">性能优化<a href="#性能优化" class="hash-link" aria-label="性能优化的直接链接" title="性能优化的直接链接">​</a></h3><blockquote><p>随便搜索可以得到很多方案</p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="node">Node<a href="#node" class="hash-link" aria-label="Node的直接链接" title="Node的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1事件循环和浏览器事件循环的区别">1、事件循环，和浏览器事件循环的区别<a href="#1事件循环和浏览器事件循环的区别" class="hash-link" aria-label="1、事件循环，和浏览器事件循环的区别的直接链接" title="1、事件循环，和浏览器事件循环的区别的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2登录鉴权">2、登录，鉴权<a href="#2登录鉴权" class="hash-link" aria-label="2、登录，鉴权的直接链接" title="2、登录，鉴权的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3中间件">3、中间件<a href="#3中间件" class="hash-link" aria-label="3、中间件的直接链接" title="3、中间件的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4session和cookie区别及使用">4、session（和cookie区别及使用）<a href="#4session和cookie区别及使用" class="hash-link" aria-label="4、session（和cookie区别及使用）的直接链接" title="4、session（和cookie区别及使用）的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5stream-流">5、Stream 流<a href="#5stream-流" class="hash-link" aria-label="5、Stream 流的直接链接" title="5、Stream 流的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="6npm-install-的执行过程">6、npm install 的执行过程<a href="#6npm-install-的执行过程" class="hash-link" aria-label="6、npm install 的执行过程的直接链接" title="6、npm install 的执行过程的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="7文件系统-fs">7、文件系统 fs<a href="#7文件系统-fs" class="hash-link" aria-label="7、文件系统 fs的直接链接" title="7、文件系统 fs的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="8express-和koa框架的区别">8、express 和koa框架的区别<a href="#8express-和koa框架的区别" class="hash-link" aria-label="8、express 和koa框架的区别的直接链接" title="8、express 和koa框架的区别的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="9node的优势和劣势">9、Node的优势和劣势？<a href="#9node的优势和劣势" class="hash-link" aria-label="9、Node的优势和劣势？的直接链接" title="9、Node的优势和劣势？的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="10node的原生模块使用过的">10、node的原生模块（使用过的）<a href="#10node的原生模块使用过的" class="hash-link" aria-label="10、node的原生模块（使用过的）的直接链接" title="10、node的原生模块（使用过的）的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="11大文件上传如何做分片上传断点继传">11、大文件上传如何做分片上传、断点继传?<a href="#11大文件上传如何做分片上传断点继传" class="hash-link" aria-label="11、大文件上传如何做分片上传、断点继传?的直接链接" title="11、大文件上传如何做分片上传、断点继传?的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="12微服务">12、微服务<a href="#12微服务" class="hash-link" aria-label="12、微服务的直接链接" title="12、微服务的直接链接">​</a></h4><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="网络制式">网络制式<a href="#网络制式" class="hash-link" aria-label="网络制式的直接链接" title="网络制式的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1常见状态码">1、常见状态码<a href="#1常见状态码" class="hash-link" aria-label="1、常见状态码的直接链接" title="1、常见状态码的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2浏览器存储缓存">2、浏览器存储、缓存<a href="#2浏览器存储缓存" class="hash-link" aria-label="2、浏览器存储、缓存的直接链接" title="2、浏览器存储、缓存的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3跨域为什么常用解决办法">3、跨域(为什么、常用解决办法)<a href="#3跨域为什么常用解决办法" class="hash-link" aria-label="3、跨域(为什么、常用解决办法)的直接链接" title="3、跨域(为什么、常用解决办法)的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4websoket">4、websoket<a href="#4websoket" class="hash-link" aria-label="4、websoket的直接链接" title="4、websoket的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5httphttps">5、http，https<a href="#5httphttps" class="hash-link" aria-label="5、http，https的直接链接" title="5、http，https的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="6安全csrfxssddos">6、安全（CSRF、XSS、DDos）<a href="#6安全csrfxssddos" class="hash-link" aria-label="6、安全（CSRF、XSS、DDos）的直接链接" title="6、安全（CSRF、XSS、DDos）的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="7前端登录流程">7、前端登录流程<a href="#7前端登录流程" class="hash-link" aria-label="7、前端登录流程的直接链接" title="7、前端登录流程的直接链接">​</a></h4><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="手写题">手写题<a href="#手写题" class="hash-link" aria-label="手写题的直接链接" title="手写题的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="我的js-基础中可以查看"><a href="https://jamesli-dev.github.io/docs/base/js/jsBasic" target="_blank" rel="noopener noreferrer" title="我的js 基础中可以查看">这里都有Click</a><a href="#我的js-基础中可以查看" class="hash-link" aria-label="我的js-基础中可以查看的直接链接" title="我的js-基础中可以查看的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1深度克隆">1、深度克隆<a href="#1深度克隆" class="hash-link" aria-label="1、深度克隆的直接链接" title="1、深度克隆的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2防抖节流">2、防抖，节流<a href="#2防抖节流" class="hash-link" aria-label="2、防抖，节流的直接链接" title="2、防抖，节流的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3callbindapply">3、call，bind，apply<a href="#3callbindapply" class="hash-link" aria-label="3、call，bind，apply的直接链接" title="3、call，bind，apply的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4promise-promiseall">4、promise, promise.all<a href="#4promise-promiseall" class="hash-link" aria-label="4、promise, promise.all的直接链接" title="4、promise, promise.all的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5函数柯里化">5、函数柯里化<a href="#5函数柯里化" class="hash-link" aria-label="5、函数柯里化的直接链接" title="5、函数柯里化的直接链接">​</a></h4><p>.......</p><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="算法">算法<a href="#算法" class="hash-link" aria-label="算法的直接链接" title="算法的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="直接上链接---codetopcc">直接上链接 -&gt; <a href="https://codetop.cc/home" target="_blank" rel="noopener noreferrer" title="codeTop.cc">都在这里</a><a href="#直接上链接---codetopcc" class="hash-link" aria-label="直接上链接---codetopcc的直接链接" title="直接上链接---codetopcc的直接链接">​</a></h4><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="其他">其他<a href="#其他" class="hash-link" aria-label="其他的直接链接" title="其他的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="1前端路由实现方式">1、前端路由实现方式<a href="#1前端路由实现方式" class="hash-link" aria-label="1、前端路由实现方式的直接链接" title="1、前端路由实现方式的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="2taro-vs-uni-app-优缺点">2、Taro VS uni-app 优缺点<a href="#2taro-vs-uni-app-优缺点" class="hash-link" aria-label="2、Taro VS uni-app 优缺点的直接链接" title="2、Taro VS uni-app 优缺点的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="3谈谈微信小程序">3、谈谈微信小程序<a href="#3谈谈微信小程序" class="hash-link" aria-label="3、谈谈微信小程序的直接链接" title="3、谈谈微信小程序的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="4代码发布之后怎么确保用户访问到的是最新的">4、代码发布之后，怎么确保用户访问到的是最新的<a href="#4代码发布之后怎么确保用户访问到的是最新的" class="hash-link" aria-label="4、代码发布之后，怎么确保用户访问到的是最新的的直接链接" title="4、代码发布之后，怎么确保用户访问到的是最新的的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="5前端常用设计模式观察者模式发布订阅模式等">5、前端常用设计模式（观察者模式，发布订阅模式等）<a href="#5前端常用设计模式观察者模式发布订阅模式等" class="hash-link" aria-label="5、前端常用设计模式（观察者模式，发布订阅模式等）的直接链接" title="5、前端常用设计模式（观察者模式，发布订阅模式等）的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="6谈谈微前端">6、谈谈微前端<a href="#6谈谈微前端" class="hash-link" aria-label="6、谈谈微前端的直接链接" title="6、谈谈微前端的直接链接">​</a></h4><h4 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="7结合你的项目经历谈谈有哪些难点解决方式">7、结合你的项目经历，谈谈有哪些难点，解决方式<a href="#7结合你的项目经历谈谈有哪些难点解决方式" class="hash-link" aria-label="7、结合你的项目经历，谈谈有哪些难点，解决方式的直接链接" title="7、结合你的项目经历，谈谈有哪些难点，解决方式的直接链接">​</a></h4><h2 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="三心态">三、心态<a href="#三心态" class="hash-link" aria-label="三、心态的直接链接" title="三、心态的直接链接">​</a></h2><p>生活总归不是一帆风顺，尽力而为，随心而动，保持本心</p><p>不管是找工作，还是在面试过程中，心态是很重要的，尤其是在当下市场环境不理想的情况下，更要求我们放平心态，烦躁不安是正常，但是得及时调节自我，不能太着急，着急可能就会犯一些意想不到的错误，亲身经历过的应该懂。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="四总结">四、总结<a href="#四总结" class="hash-link" aria-label="四、总结的直接链接" title="四、总结的直接链接">​</a></h2><p>时间关系，上文中只列出了一些框架，这些东西随便搜索，都是可以得到答案，我后面也会抽时间整理一份详细的内容出来。
不多废话，希望所有的人都能找到理想合适自己的工作！</p>]]></content>
        <author>
            <name>Torres Li</name>
            <uri>https://github.com/JamesLi-dev</uri>
        </author>
        <category label="前端" term="前端"/>
        <category label="面试" term="面试"/>
        <category label="HTML" term="HTML"/>
        <category label="CSS" term="CSS"/>
        <category label="JS" term="JS"/>
        <category label="React" term="React"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023二月被裁，一名六年前端的心路历程]]></title>
        <id>https://JamesLi-dev.github.io/blog/cutstaff</id>
        <link href="https://JamesLi-dev.github.io/blog/cutstaff"/>
        <updated>2023-03-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[2023年2月的某一天，冷清的工作群里，发来了一条这样的信息：]]></summary>
        <content type="html"><![CDATA[<p>2023年2月的某一天，冷清的工作群里，发来了一条这样的信息：</p><p>【因为公司经营XXX，现决定告知上海办公室所有员工，公司员工与公司之间的劳动合同及劳动关系于2023年2月xx日依法终止。。。。。。。。。】</p><p>虽然是意料之中的事情，但是还是心里多少有点不安，在当下大环境不好的情况下，这就是一道晴天霹雳！裁员的过程就不多赘述了，过程跌宕起伏（被恶心坏了），结果意料之中吧，拿了 N + 1 主要入职时间很短，没有什么可纠结的点。</p><p>介绍一下自己，一名工作六年的前端开发，没想到在掘金的第一篇文章竟然不是技术类文章，毕竟工作这么久，还是第一次被裁员，值得记录。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="入职">入职<a href="#入职" class="hash-link" aria-label="入职的直接链接" title="入职的直接链接">​</a></h2><p>去年九月从上家公司离职，进入到这家公司，虽然是创业型公司，但是产品前景还是挺有看点，这也是我选择这家公司的原因，入职五个多月，时间是真的短！</p><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="入职之后做了什么">入职之后做了什么？<a href="#入职之后做了什么" class="hash-link" aria-label="入职之后做了什么？的直接链接" title="入职之后做了什么？的直接链接">​</a></h3><p>那可就做的多了，优化，重构，新功能，踩坑，建议等等等等，上线发版记录可以证明，刚入职一周每天都会有上线，天知道我是怎么肝出来的。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="入职创业型公司的感受">入职创业型公司的感受？<a href="#入职创业型公司的感受" class="hash-link" aria-label="入职创业型公司的感受？的直接链接" title="入职创业型公司的感受？的直接链接">​</a></h3><p>虽然是属于创业性质的公司，但是刚入职时候，感觉还挺不错的，内部沟通效率很高，前后端沟通很直接，每天技术部门会有早会，安排日常工作，总结前一天的开发任务及进度，另外就是疫情时候的3+2，两天居家办公还是很舒服的，加班嘛，那就属于洒洒水啦，发版频率高，加班频率也不少，虽然大概率没有到很晚大概七八点钟吧，严重一点时候可能会到11-12点。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="离职之后">离职之后<a href="#离职之后" class="hash-link" aria-label="离职之后的直接链接" title="离职之后的直接链接">​</a></h2><p>从拿到补偿金的那一秒，整个人放空了，第一想法就是出去玩几天。</p><p>第二天，一样的闹铃，一样的时间，起床洗漱吃早饭，背包出门那一刻突然想起来，自己被裁了，不用去公司了，扔下书包跑到电脑旁，开机 -&gt; EA -&gt; FIFA ...</p><p>就这样潇洒的过了几天之后，感觉没意思了，是时候开始看看新的机会了，也就是在这时候我感觉到了一丝丝的焦虑。</p><p>打开boss，修改了简历，连续点了四五家公司沟通，只是单纯的发起兴趣，等了一会儿，一条已读，两条已读，但是没有回复，mmp 这个场景有点似曾相识啊！</p><p>这样的重复操作我屡试不爽，我知道事情没那么简单了，于是我开始反思，开始找朋友了解情况。最终得到的结论就是“不妙，不好”</p><h2 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="冷静思考">冷静思考<a href="#冷静思考" class="hash-link" aria-label="冷静思考的直接链接" title="冷静思考的直接链接">​</a></h2><p>看到了外面的水深火热，我开始思考，后面的路应该怎么走，是继续往下走，还是直接转行算了，再看看自己的钱包。</p><p>看到脉脉上著名的【前端已死】，各种论坛里的各种负面消息，我就在想，前端真的没路走了？</p><p>不会的，有的人觉得现在前端技术已经到顶了，其实不然，从近几年新出现的框架<code>Solid</code>，新出现的JS 运行时<code>Bun</code>, 新出现的打包工具 <code>vite</code>、<code>Turbopack</code>等等一系列的生态，全是在向好的方向发展，这并不意味着前端已死，而是需要前端从业者不断去学习和适应，不断接纳新的知识点，这个我相信后端的发展也是这么走过来的。
总之，前端还是在不断发展中，大环境的影响还是很大的，就像APP，网站等一样需要的是不断去更新，迭代！</p><h2 class="anchor anchorWithHideOnScrollNavbar_kuKB" id="总结">总结<a href="#总结" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2><p>在不好的大环境下，在竞争激烈的当下，坚持本心才是最重要的，想想自己需要什么，想做到什么，实现什么。</p><p>扯了半天，不知道对大家来说有什么启发，到此为止！</p><p>我也该去复习知识点，准备一下八股文，算法，迎接接下来的面试了！后面我也会及时更新最近面试公司及面试题目，供大家参考。</p>]]></content>
        <author>
            <name>Torres Li</name>
            <uri>https://github.com/JamesLi-dev</uri>
        </author>
        <category label="前端" term="前端"/>
        <category label="裁员" term="裁员"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[你真的需要微服务吗？]]></title>
        <id>https://JamesLi-dev.github.io/blog/microservices</id>
        <link href="https://JamesLi-dev.github.io/blog/microservices"/>
        <updated>2020-08-26T00:00:00.000Z</updated>
        <author>
            <name>Torres Li</name>
            <uri>https://github.com/JamesLi-dev</uri>
        </author>
        <category label="Node" term="Node"/>
        <category label="微服务" term="微服务"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[欢迎来到Torli's Blog]]></title>
        <id>https://JamesLi-dev.github.io/blog/欢迎</id>
        <link href="https://JamesLi-dev.github.io/blog/欢迎"/>
        <updated>2020-08-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[欢迎来到 Torli 的 Blogs，在这里，我会分享一些自己平时的工作项目中用到的新奇、好玩的东西，还会分享一些比较新的技术的看法等等。]]></summary>
        <content type="html"><![CDATA[<p>欢迎来到 Torli 的 Blogs，在这里，我会分享一些自己平时的工作项目中用到的新奇、好玩的东西，还会分享一些比较新的技术的看法等等。</p>]]></content>
        <author>
            <name>Torres Li</name>
            <uri>https://github.com/JamesLi-dev</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MDX Blog Post]]></title>
        <id>https://JamesLi-dev.github.io/blog/mdx-blog-post</id>
        <link href="https://JamesLi-dev.github.io/blog/mdx-blog-post"/>
        <updated>2018-08-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Blog posts support Docusaurus Markdown features, such as MDX.]]></summary>
        <content type="html"><![CDATA[<p>Blog posts support <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_t2Hc"><div class="admonitionHeading_F_6S"><span class="admonitionIcon_LHTy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_oaIG"><p>Use the power of React to create interactive blog posts.</p><div class="language-js codeBlockContainer_sAXX theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_pc2u"><pre tabindex="0" class="prism-code language-js codeBlock_fjSB thin-scrollbar"><code class="codeBlockLines_FFvy"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button clicked!'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup_tcEP"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_Zxeh" aria-hidden="true"><svg class="copyButtonIcon_Pc49" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_Ol7y" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><button>Click me!</button></div></div>]]></content>
        <author>
            <name>Torres Li</name>
            <uri>https://github.com/JamesLi-dev</uri>
        </author>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
</feed>